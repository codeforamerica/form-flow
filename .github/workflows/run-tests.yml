name: Run tests

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  test:
    name: Run tests
    runs-on: ubuntu-latest
    permissions:
      actions: read
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: form-flow-test
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: form-flow-test
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
        ports:
          - 5432:5432
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          path: form-flow
      - name: Set up JDK
        uses: actions/setup-java@v3.5.0
        with:
          distribution: 'adopt'
          java-version: '17'
          cache: 'gradle'
      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Grant execute permission for gradlew
        run: cd form-flow && chmod +x gradlew
      - name: Test + Jar with Gradle
        id: test
        run: cd form-flow && ./gradlew clean test jar --stacktrace
      - name: Checkout Starter App repo
        uses: actions/checkout@v2
        with:
          repository: codeforamerica/form-flow-starter-app
          path: starter-app
          ref: main
      - name: Test Starter App
        id: test-starter-app
        run: |
          export SPRING_DATASOURCE_URL=jdbc:postgresql://localhost:5432/form-flow-test
          export SPRING_DATASOURCE_USERNAME=form-flow-test
          export USE_LOCAL_LIBRARY=true
          cd starter-app
          ./gradlew clean test --stacktrace
      - name: Announce failures on Slack
        if:  ${{ steps.test.conclusion == 'failure' || steps.test-starter-app.conclusion == 'failure' }}
        uses: ravsamhq/notify-slack-action@v2
        with:
          status: ${{ job.status }}
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      - name: Report results to DeepSource
        continue-on-error: true
        if:  ${{ steps.test.conclusion == 'success' }}
        run: |
           curl https://deepsource.io/cli | sh
           ./bin/deepsource report --analyzer test-coverage --key java --value-file ./build/reports/jacoco/test/jacocoTestReport.xml
        env:
          DEEPSOURCE_DSN: ${{ secrets.DEEPSOURCE_DSN }}
      - name: Cleanup Gradle Cache
        run: |
          rm -f ~/.gradle/caches/modules-2/modules-2.lock
          rm -f ~/.gradle/caches/modules-2/gc.properties
