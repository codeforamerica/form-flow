name: Create Release
on:
  release:
    types:
      - released
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release'
        type: string
        required: true
      sonatypeUsername:
        description: 'Sonatype username'
        type: string
        required: true
      sonatypePassword:
        description: 'Sonatype password'
        type: string
        required: true

jobs:
  release:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: form-flow-test
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: form-flow-test
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
        ports:
          - 5432:5432
    steps:
      - name: Use faketty to allow for GPG signing
        uses: Yuri6037/Action-FakeTTY@v1.1
      - name: Hide sensitive inputs
        uses: levibostian/action-hide-sensitive-inputs@v1
        with:
          exclude_inputs: version
      - name: Checkout
        uses: actions/checkout@v3
        with: # take this out when you're done testing so it uses the release instead!
          ref: ${{ inputs.version }}
          fetch-depth: 0
      - name: Update version in build.gradle
        run: | # TODO: switch out inputs.version with github.event.release.tag_name when you're done testing!
            echo "Updating version in build.gradle to ${{ inputs.version }}"
            sed -i 's/version = "\(.*\)"/version = "${{ inputs.version }}"/' build.gradle
            cat build.gradle
            echo "${{ secrets.PLATFORM_ROBOT_GPG_PRIVATE_KEY }}" > private_key.asc
            echo "${{ secrets.PLATFORM_ROBOT_GPG_PASSPHRASE }}" | gpg --batch --pinentry-mode loopback --passphrase-fd 0 --import private_key.asc
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: '17'
          cache: 'gradle'
      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Build and test with Gradle
        run: |
          chmod +x gradlew
          ./gradlew clean jar
      - name: Update version
        run: | # switch out inputs.version with latest release when you're done testing!
          echo "Updating version in build.gradle to ${{ inputs.version }}"
          sed -i 's/version = "\(.*\)"/version = "${{ inputs.version }}"/' build.gradle
      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@e6e38bacfdf1a337459f332974bb2327a31aaf4b
      - name: Configure GPG Key
        run: |
          echo -n "${{ secrets.PLATFORM_ROBOT_GPG_PRIVATE_KEY }}" | base64 --decode | gpg --import --pinentry-mode loopback --passphrase ${{ secrets.PLATFORM_ROBOT_GPG_PASSPHRASE }}
        env:
          GPG_TTY: $(tty)
      - name: Configure gradle properties for key id
        run: |
          echo "signing.gnupg.homeDir=/home/runner/.gnupg" >> ~/.gradle/gradle.properties
          echo "signing.gnupg.keyName=${{ secrets.PLATFORM_ROBOT_GPG_ID }}" >> ~/.gradle/gradle.properties
          echo "signing.gnupg.passphrase=${{ secrets.PLATFORM_ROBOT_GPG_PASSPHRASE }}" >> ~/.gradle/gradle.properties
          echo "no-tty" >> ~/.gnupg/gpg.conf >> ~/.gradle/gradle.properties
      - name: Publish package
        uses: gradle/gradle-build-action@v2.4.2
        with:
          arguments: tasks publishToSonatype closeAndReleaseSonatypeStagingRepository
        env:
          SONATYPE_USERNAME: ${{ inputs.sonatypeUsername }}
          SONATYPE_PASSWORD: ${{ inputs.sonatypePassword }}
          GPG_SIGNING_KEY: ${{ secrets.PLATFORM_ROBOT_GPG_PRIVATE_KEY }}
          ORG_GRADLE_PROJECT_signingKey: ${{ secrets.PLATFORM_ROBOT_GPG_PRIVATE_KEY }}
          ORG_GRADLE_PROJECT_signingPassword: ${{ secrets.PLATFORM_ROBOT_GPG_PASSPHRASE }}
          GPG_SIGNING_PASSPHRASE: ${{ secrets.PLATFORM_ROBOT_GPG_PASSPHRASE }}
#      - name: Update version after publish
#        run: |
#          git config --local user.email "platforms-robot@codeforamerica.org"
#          git config --local user.name "CfA Platforms Robot"
#          git checkout main
#          git checkout -b "bump-snapshot-${{ inputs.version }}-SNAPSHOT"
#          sed -i 's/version = "\(.*\)"/version = "${{ inputs.version }}-SNAPSHOT"/' build.gradle
#          git add build.gradle
#          git commit -m "Updating version in build.gradle to ${{ inputs.version }}-SNAPSHOT"
#          git push origin/bump-snapshot-${{ inputs.version }}-SNAPSHOT
#          git checkout main
#          git merge origin/bump-snapshot-${{ inputs.version }}-SNAPSHOT
#      - name: Publish GitHub Release
#        uses: softprops/action-gh-release@v1
#        with:
#          tag_name: ${{inputs.version}}
#          draft: false
#          prerelease: false

