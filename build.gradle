plugins {
    // Apply the java-library plugin for API and implementation separation.
    id 'org.springframework.boot' version '2.7.10'
    id 'io.spring.dependency-management' version '1.1.0'
    id 'java-library'
    id 'maven-publish'
    id 'java'
    id 'com.adarshr.test-logger' version '3.2.0'
    id 'jacoco'
}

targetCompatibility = JavaVersion.VERSION_17
sourceCompatibility = JavaVersion.VERSION_17

def localEnv = new Properties()
if (file(".env").isFile()) {
    file(".env").withInputStream { localEnv.load(it) }
}

jar {
    manifest {
        attributes "Main-Class": "formflow.library.ScreenController"
    }
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

bootJar {
    enabled = false
}

task webjar(type: Jar, dependsOn: "jar") {
    from(fileTree("dist")) {
        into "META-INF/resources"
    }
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    api 'org.springframework.boot:spring-boot-starter-thymeleaf'

    implementation 'com.google.guava:guava:31.1-jre'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.jetbrains:annotations:24.0.1'
    implementation 'com.vladmihalcea:hibernate-types-55:2.21.1'
    implementation 'javax.persistence:javax.persistence-api:2.2'
    implementation 'org.flywaydb:flyway-core:9.16.3'
    implementation 'net.coobird:thumbnailator:0.4.19'
    implementation 'org.webjars.npm:dropzone:5.9.3'
    implementation 'com.amazonaws:aws-java-sdk-s3:1.12.364'
    implementation 'com.smartystreets.api:smartystreets-java-sdk:3.13.15'
    implementation 'org.apache.pdfbox:pdfbox:2.0.+'
    implementation 'org.yaml:snakeyaml:2.0'

    compileOnly 'org.projectlombok:lombok'

    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

    // Use JUnit test framework.
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.2'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'org.jsoup:jsoup:1.15.4'
    // bonigarcia seems to need this version of client5, as of version 5.3.2.
    // aws-java-sdk-s3 uses version httpclient:4.5.13, so if we see any differences in testing going forward
    // we should take a look at this dependency and see if it's really testing things correctly and
    // monitor the dependencies.
    testImplementation 'org.apache.httpcomponents.client5:httpclient5:5.2.1'
    testImplementation 'io.github.bonigarcia:webdrivermanager:5.3.2'
    testImplementation 'org.awaitility:awaitility'
    testImplementation 'org.seleniumhq.selenium:selenium-java'
    testImplementation 'org.postgresql:postgresql'
    testImplementation 'org.projectlombok:lombok:1.18.26'
}

test {
    finalizedBy jacocoTestReport
    useJUnitPlatform()
}

jacocoTestReport {
    reports {
        xml.required = true
    }
}


publishing {
    repositories {
        maven {
            name = "MavenCentral"
            // this url "https://s01.oss.sonatype.org/content/repositories/snapshots" is the NEW 
            // sonatype url, but we need the old one since we have an older account 
            // (created 2013) we are on the old servers (see https://issues.sonatype.org/browse/OSSRH-85469)
            url = "https://oss.sonatype.org/content/repositories/snapshots"
            credentials {
                username = localEnv.getProperty("SONATYPE_USERNAME") ?: System.getenv("SONATYPE_USERNAME")
                password = localEnv.getProperty("SONATYPE_PASSWORD") ?: System.getenv("SONATYPE_PASSWORD")
            }
        }
    }
    publications {
        mavenJava(MavenPublication) {
            pom {
                from(components.java)
                name = "Form Flow Builder"
                description = "A Java library placed in a Spring Boot app to generate form flows."
                url = "https://github.com/codeforamerica/form-flow/"
                group = "org.codeforamerica.platform"
                artifactId = "form-flow"
                version = "0.0.3-SNAPSHOT"

                licenses {
                    license {
                        name = 'MIT License'
                        url = 'https://raw.githubusercontent.com/git/git-scm.com/main/MIT-LICENSE.txt'
                    }
                }
                developers {
                    developer {
                        id = 'bencalegari'
                        name = 'Ben Calegari'
                        email = 'bcalegari@codeforamerica.org'
                    }
                    developer {
                        id = 'cy-cfa'
                        name = 'Cypress Borg'
                        email = 'cborg@codeforamerica.org'
                    }
                    developer {
                        id = 'luigi'
                        name = 'Luigi Ray-Monta√±ez'
                        email = 'luigi@codeforamerica.org'
                    }
                    developer {
                        id = 'birdprsn'
                        name = 'Alex Gonzalez'
                        email = 'agonzalez@codeforamerica.org'
                    }
                    developer {
                        id = 'cenyia'
                        name = 'Chibuisi Enyia'
                        email = 'cenyia@codeforamerica.org'
                    }
                    developer {
                        id = 'rcastillo'
                        name = 'Rapi Castillo'
                        email = 'rcastillo@codeforamerica.org'
                    }
                    developer {
                        id = 'bethany'
                        name = 'Bethany Seeger'
                        email = 'bseeger@codeforamerica.org'
                    }
                }
            }
        }
    }
}
